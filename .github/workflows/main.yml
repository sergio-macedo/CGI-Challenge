name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        run: |
          curl -Lo terraform.zip https://releases.hashicorp.com/terraform/$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)/terraform_$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform --version

      - name: set up my terraform 
        run: |
            terraform init
            terraform apply
            

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set up KinD
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind create cluster --wait 5s

      - name: Set up kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Deploy Nginx and Hello World to KinD cluster
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hello-world
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: hello-world
            template:
              metadata:
                labels:
                  app: hello-world
              spec:
                containers:
                  - name: hello-world
                    image: hashicorp/http-echo:latest
                    args:
                      - "-text=Hello, World!"
                    ports:
                      - containerPort: 5678

          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: hello-world
          spec:
            type: ClusterIP
            ports:
              - port: 5678
                targetPort: 5678
            selector:
              app: hello-world

          ---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: nginx
            template:
              metadata:
                labels:
                  app: nginx
              spec:
                containers:
                  - name: nginx
                    image: nginx:latest
                    ports:
                      - containerPort: 80

          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx
          spec:
            type: LoadBalancer
            ports:
              - port: 80
            selector:
              app: nginx
          EOF

      - name: Clean up KinD cluster
        run: kind delete cluster
